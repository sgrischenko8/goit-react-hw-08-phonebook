{"version":3,"file":"static/js/959.98e96058.chunk.js","mappings":"+LACA,EAAuB,6BAAvB,EAA4D,8BAA5D,EAAkG,8B,oBCK5FA,EAAgB,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAE1CC,EAAiB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACvCC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACER,cAAeA,EACfS,SACwB,cAAtBF,EAASG,SAA2BJ,EAAkBD,EAH1D,UAME,UAAC,KAAD,CAAMM,UAAWC,EAAjB,UACyB,cAAtBL,EAASG,WACR,iCACE,kBAAOG,QAAQ,OAAOF,UAAWC,EAAjC,SAA+C,UAG/C,SAAC,KAAD,CACED,UAAWC,EACXE,KAAK,OACLb,KAAK,OACLc,QAAQ,yCACRC,UAAU,IACVC,MAAM,qJAKZ,kBAAOJ,QAAQ,QAAQF,UAAWC,EAAlC,SAAgD,WAGhD,SAAC,KAAD,CACED,UAAWC,EACXE,KAAK,QACLb,KAAK,QACLc,QAAQ,gCACRE,MAAM,kGAGR,kBAAOJ,QAAQ,WAAWF,UAAWC,EAArC,SAAmD,cAGnD,SAAC,KAAD,CACED,UAAWC,EACXE,KAAK,WACLb,KAAK,WACLc,QAAQ,2BACRC,UAAU,IACVC,MAAM,qEAGR,SAACC,EAAA,EAAD,CAAQC,QAnDd,WAEC,EAiDK,SACyB,cAAtBZ,EAASG,SAA2B,UAAY,eAK1D,C,qCCpDD,IAdqB,SAAC,GAAe,IAAbU,EAAY,EAAZA,MACD,MAAjBA,EAAMC,QAAmBD,EAAME,KAAKC,SAIhB,OAApBH,EAAME,KAAKE,MACbC,EAAAA,GAAAA,MAAY,sBAEO,MAAjBL,EAAMC,QAAsC,OAApBD,EAAME,KAAKE,MACrCC,EAAAA,GAAAA,MAAY,oBAPZA,EAAAA,GAAAA,MAAY,8BAUf,C,+ICoBD,UA3BiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,YAAmBT,EAAnB,EAAmBA,MAAOU,EAA1B,EAA0BA,UAMpBxB,EAAe,mCAAG,WAAMyB,GAAN,0FAEdF,EAASE,GAAQC,MAAK,SAAAC,GAC1BP,GAASQ,EAAAA,EAAAA,IAASD,EAAIX,KAAKa,OAC5B,IAJmB,sDAMpBC,QAAQC,IAAR,MANoB,wDAAH,sDAUrB,OACE,gCACGjB,IAAS,SAAC,IAAD,CAAcA,MAAOA,IAC9BU,QAhBHL,EAAAA,GAAAA,QAAc,gCAiBZ,SAAC,IAAD,CAAgBnB,gBAAiBA,MAGtC,C","sources":["webpack://react-homework-template/./src/components/CredentialForm/CredentialForm.module.css?aeb7","components/CredentialForm/CredentialForm.js","components/ErrorMessage/ErrorMessage.js","pages/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"CredentialForm_form__cMEDX\",\"label\":\"CredentialForm_label__q4egQ\",\"input\":\"CredentialForm_input__UKqbI\"};","import { Formik, Form, Field } from 'formik';\nimport { Button } from 'components/Button/Button';\nimport styles from './CredentialForm.module.css';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nexport const CredentialForm = ({ loginHandler, registerHandler }) => {\n  const location = useLocation();\n\n  function dummyClick() {\n    return;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={\n        location.pathname === '/register' ? registerHandler : loginHandler\n      }\n    >\n      <Form className={styles.form}>\n        {location.pathname === '/register' && (\n          <>\n            <label htmlFor=\"name\" className={styles.label}>\n              Name\n            </label>\n            <Field\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"['a-zA-Z\\u0400-\\u04ff0-9\\s\\W+\\.]+\"\n              minLength=\"2\"\n              title=\"Name may contain only letters, apostrophe, dash, dots and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n          </>\n        )}\n\n        <label htmlFor=\"email\" className={styles.label}>\n          Email\n        </label>\n        <Field\n          className={styles.input}\n          type=\"email\"\n          name=\"email\"\n          pattern=\"^([^ ]+@[^ ]+\\.[a-z]{2,6}|)$\"\n          title=\"E-mail may contain only letters, digits, At sign and dot. For example JacobMercer2@gmail.com\"\n        />\n\n        <label htmlFor=\"password\" className={styles.label}>\n          Password\n        </label>\n        <Field\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          pattern=\"['a-zA-Z\\d\\s\\W+\\.]+.\"\n          minLength=\"6\"\n          title=\"Password number may contain letters, digits, spaces and symbols\"\n        />\n\n        <Button onClick={dummyClick}>\n          {location.pathname === '/register' ? 'Sign Up' : 'Log In'}\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nCredentialForm.propTypes = {\n  loginHandler: PropTypes.func,\n  registerHandler: PropTypes.func,\n};\n","import toast from 'react-hot-toast';\n\nconst ErrorMessage = ({ error }) => {\n  if (error.status === 400 && !error.data.message) {\n    toast.error('E-mail and password not fit');\n    return;\n  }\n  if (error.data.code === 11000) {\n    toast.error('Your access denied');\n  }\n  if (error.status === 400 && error.data.code !== 11000) {\n    toast.error('Fill all fields');\n    return;\n  }\n};\n\nexport default ErrorMessage;\n","import { useDispatch } from 'react-redux';\nimport { setToken } from 'redux/auth/tokenSlice';\nimport { useRegisterMutation } from 'redux/auth/authSlice';\nimport { CredentialForm } from 'components/CredentialForm/CredentialForm';\nimport toast from 'react-hot-toast';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [register, { error, isSuccess }] = useRegisterMutation();\n\n  const showCongrats = () => {\n    toast.success('You successfully registered');\n  };\n\n  const registerHandler = async values => {\n    try {\n      await register(values).then(res => {\n        dispatch(setToken(res.data.token));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      {error && <ErrorMessage error={error} />}\n      {isSuccess && showCongrats()}\n      <CredentialForm registerHandler={registerHandler} />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["initialValues","name","email","password","CredentialForm","loginHandler","registerHandler","location","useLocation","onSubmit","pathname","className","styles","htmlFor","type","pattern","minLength","title","Button","onClick","error","status","data","message","code","toast","dispatch","useDispatch","useRegisterMutation","register","isSuccess","values","then","res","setToken","token","console","log"],"sourceRoot":""}